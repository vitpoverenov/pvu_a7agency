
:root {
  /**
    root это псевдокласс аналогичен ХТМЛ но имеет выше вес селектора
    глобальные переменные для CSS
   * colors
   */

  --rich-black-fogra-29-1: hsl(215, 31%, 14%);
  --rich-black-fogra-29-2: hsl(230, 14%, 8%);
  --rich-black-fogra-39: hsl(158, 29%, 5%);
  --granite-gray: hsl(0, 0%, 40%);
  --go-green_50: hsla(145, 63%, 42%, 0.5);
  --go-green_8: hsla(145, 63%, 42%, 0.08);
  --go-green_5: hsla(145, 63%, 42%, 0.05);
  --light-gray: hsl(0, 0%, 80%);
  --mint-cream: hsl(160, 100%, 98%);
  --cultured: hsl(0, 0%, 93%);
  --go-green: hsl(145, 63%, 42%);
  --white: hsl(0, 0%, 100%);
  --jet: hsl(0, 0%, 18%);

  /**
   * typography
   */

  --ff-poppins: 'Poppins', sans-serif;
  --ff-cuprum: 'Cuprum', sans-serif;

  --fs-1: 4.5rem;
  --fs-2: 3.6rem;
  --fs-3: 3.5rem;
  --fs-4: 3.2rem;
  --fs-5: 2.5rem;
  --fs-6: 2.4rem;
  --fs-7: 2.2rem;
  --fs-8: 2rem;
  --fs-9: 1.8rem;
  --fs-10: 1.5rem;
  --fs-11: 1.4rem;
  --fs-12: 1.3rem;

  --fw-600: 600;
  --fw-500: 500;

  /**
   * spacing
   */

  --section-padding: 80px;

  /**
   * shadow
   */

  --shadow-1: 3px 4px 30px hsla(0, 0%, 53%, 0.1);
  --shadow-2: 5px 3px 40px hsla(191, 100%, 17%, 0.1);

  /**
   * radius
   */

  --radius-5: 5px;

  /**
   * transition
   */

  --transition-1: 0.25s ease;
  --transition-2: 0.5s ease;
  --cubic-out: cubic-bezier(0.33, 0.85, 0.4, 0.96);

}

/*-----------------------------------*\
  #RESET
\*-----------------------------------*/

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

li { list-style: none; }

a {
  color: inherit;
  text-decoration: none;
}

a,
img,
span,
input,
button,
ion-icon { display: block; }

img { height: auto; }

input,
button {
  background: none;
  border: none;
  font: inherit;
}

input { width: 100%; }

button { cursor: pointer; }

ion-icon { pointer-events: none; }

address { font-style: normal; }

html {
  font-family: var(--ff-poppins);
  font-size: 10px;
  scroll-behavior: smooth;
}

body {
  background-color: var(--white);
  color: var(--granite-gray);
  font-size: 1.6rem;
  line-height: 1.7;
}

:focus-visible { outline-offset: 4px; }

::-webkit-scrollbar { width: 10px; }

::-webkit-scrollbar-track { background-color: hsl(0, 0%, 98%); }

::-webkit-scrollbar-thumb { background-color: hsl(0, 0%, 80%); }

::-webkit-scrollbar-thumb:hover { background-color: hsl(0, 0%, 70%); }

/*-----------------------------------*\
  #REUSED STYLE
\*-----------------------------------*/

.container { padding-inline: 15px; }

.section { padding-block: var(--section-padding); }

.has-before,
.has-after {
  position: relative;
  z-index: 1;
}

.has-before::before,
.has-after::after {
  content: "";
  position: absolute;
}

.h1,
.h2,
.h3,
.h2-sm {
  color: var(--rich-black-fogra-29-1);
  font-family: var(--ff-cuprum);
}

.h1 {
  font-size: var(--fs-1);
  line-height: 1.1;
}

.h2 { font-size: var(--fs-2); }

.h2,
.h3,
.h2-sm { line-height: 1.3; }

.h2-sm { font-size: var(--fs-3); }

.h3 { font-size: var(--fs-7); }

.btn-group {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: 35px;
}

.btn {
  font-weight: var(--fw-600);
  text-transform: uppercase;
  padding: 12px 24px;
  border-radius: var(--radius-5);
  max-width: max-content;
  transition: var(--transition-1);
}

.img-holder {
  aspect-ratio: var(--width) / var(--height);
  background-color: var(--light-gray);
}

.img-cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.w-100 { width: 100%; }

.text-center { text-align: center; }

.section-subtitle {
  color: var(--go-green);
  font-weight: var(--fw-500);
}

.grid-list {
  display: grid;
  gap: 20px;
}

/*-----------------------------------*\
  #HEADER
\*-----------------------------------*/

.header .btn-outline { display: none; }

.header {
  background-color: var(--go-green_50);
  padding-block: 15px;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 4;
}

.header.active {
  background-color: var(--white);
  box-shadow: var(--shadow-2);
}

.header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.nav-open-btn {
  color: var(--rich-black-fogra-29-1);
  font-size: 35px;
}

.navbar {
  position: fixed;
  top: 0;
  left: -280px;
  max-width: 280px;
  width: 100%;
  height: 100%;
  background-color: var(--rich-black-fogra-39);
  color: var(--white);
  padding: 30px 20px;
  visibility: hidden;
  transition: 0.25s var(--cubic-out);
  z-index: 4;
}

.navbar.active {
  visibility: visible;
  transform: translateX(280px);
  transition-duration: 0.5s;
}

.navbar .logo,
.nav-close-btn { color: var(--white); }

.navbar .wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-block-end: 25px;
}

.nav-close-btn { font-size: 30px; }

.navbar-link {
  padding-block: 10px;
  transition: var(--transition-1);
}

.navbar-link:is(:hover, :focus) { color: var(--go-green); }

.overlay {
  position: fixed;
  inset: 0;
  background-color: hsla(0, 0%, 100%, 0.7);
  visibility: hidden;
  opacity: 0;
  transition: var(--transition-1);
  z-index: 3;
}

.overlay.active {
  visibility: visible;
  opacity: 1;
}


/*Hero section*/

.hero {
  background-color: var(--mint-cream);
  padding-block-start: calc(var(--section-padding) + 50px) ;
  text-align: center;
}

.hero-subtitle {
  color: var(--go-green);
  font-size: var(--fs-15);
  font-weight: var(--fw-500);
  margin-inline: auto;
  max-width: max-content;
}

.hero-subtitle::before {
  top: 8px;
  left: -20px;
  width: 15px;
  height: 4px;
  background-color: var(--go-green);
}


.hero-content h1 {
  font-size: 2.5rem;
}

.hero-content h1,
.hero-subtitle {
  text-align: center;
}

.hero-title {
  margin-block: 10px;
}

.hero-text {
  color: var(--rich-black-fogra-29-1);
}

/* HERO SECTION Button */

.btn {
  display: grid;
  margin: 0 auto;
}

.btn__link {
  font-weight: var(--fw-680);
  text-transform: uppercase;
  padding: 12px 24px;
  border-radius: var(--radius-5);
  max-width: max-content;
  transition: var(--transition-1);
  background-color: var(--go-green);
}

.btn__link--active:active {
  background-color: rgb(114, 89, 146);
  color: #111;
}

.btn__link--active:hover {
  background-color: #fff;
  color: #111;
}

/*Pulse BTN  Annimation*/

.btn-icon {
  /*Using property: justufy self to make button better look*/
  justify-self: center;

  background-color: var(--go-green);
  color: var(--white);
  padding: 20px;
  border-radius: 50%;
  font-size: 20px;
  animation: pulse 2s ease infinite;
  
  margin: 10px;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 var(--go-green);
  }
  100% {
    box-shadow: 0 0 0 20px transparent;
  }
}

/*Выбираю так вот селектор класса чтоб обрезать картинку, а не БЛОК*/

.hero-banner,
.hero-banner > img {
  border-radius: 50%;
}

.hero-banner::before {
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%);
  width: 120%;
  height: 120%;
  background-image: url('/img/hero-pattern.svg');
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  z-index: -1; /*СВГ была повверх картинки, З индексом убрал ЗА картинку */
  
}

